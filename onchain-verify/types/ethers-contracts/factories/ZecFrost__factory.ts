/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../common.js"
  import type { ZecFrost, ZecFrostInterface } from "../ZecFrost.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "x",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "y",
        "type": "uint256"
      }
    ],
    "name": "isValidPublicKey",
    "outputs": [
      {
        "internalType": "bool",
        "name": "result",
        "type": "bool"
      }
    ],
    "stateMutability": "pure",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "message",
        "type": "bytes32"
      },
      {
        "internalType": "uint256",
        "name": "px",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "py",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "rx",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "ry",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "z",
        "type": "uint256"
      }
    ],
    "name": "measureVerify",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "cold",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "warm",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "message",
        "type": "bytes32"
      },
      {
        "internalType": "uint256",
        "name": "px",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "py",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "rx",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "ry",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "z",
        "type": "uint256"
      }
    ],
    "name": "verify",
    "outputs": [
      {
        "internalType": "address",
        "name": "signer",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes",
        "name": "message",
        "type": "bytes"
      },
      {
        "internalType": "uint256",
        "name": "px",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "py",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "rx",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "ry",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "z",
        "type": "uint256"
      }
    ],
    "name": "verifyBytes",
    "outputs": [
      {
        "internalType": "address",
        "name": "signer",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
] as const;

  const _bytecode = "0x6080604052348015600e575f5ffd5b50610aaf8061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061004a575f3560e01c80633e99c3951461004e57806351c39d561461007e578063ca6eee26146100af578063f2c8fb01146100df575b5f5ffd5b61006860048036038101906100639190610732565b61010f565b604051610075919061078a565b60405180910390f35b610098600480360381019061009391906107d6565b6101f6565b6040516100a692919061086e565b60405180910390f35b6100c960048036038101906100c491906107d6565b61023a565b6040516100d691906108d4565b60405180910390f35b6100f960048036038101906100f4919061094e565b6102ed565b60405161010691906108d4565b60405180910390f35b5f5f7ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641418406117ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f83107ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f851016167ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f60077ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f808788098709087ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8485091416905092915050565b5f5f5f5a905061020a89898989898961023a565b505f5a905061021d8a8a8a8a8a8a61023a565b505f5a905081830394508082039350505050965096945050505050565b5f5f610246878761010f565b90505f6102538686610320565b90505f61025f856103e1565b90505f818316841690508061027a575f9450505050506102e3565b505050505f61028c858589898c610410565b90505f6102bb86867ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f03610467565b90505f6102ca858a8a86610491565b90506102d68989610467565b9350808214840293505050505b9695505050505050565b5f6103138888604051610301929190610a34565b6040518091039020878787878761023a565b9050979650505050505050565b5f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f82107ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8410167ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f60077ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f808788098709087ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8485091416905092915050565b5f7ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036414182105f8311169050919050565b5f61045c610421878787878761050e565b6040518060400160405280601d81526020017f46524f53542d736563703235366b312d5348413235362d76316368616c000000815250610593565b905095945050505050565b5f825f528160205273ffffffffffffffffffffffffffffffffffffffff60405f2016905092915050565b5f6040517ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641418587098152601b600185160160208201528460408201527ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141858409606082015260205f60808360015afa5f5102915050949350505050565b6060606267ffffffffffffffff81111561052b5761052a610a4c565b5b6040519080825280601f01601f19166020018201604052801561055d5781602001600182028036833780820191505090505b50905060018516600201602082015385602182015260018316600201604182015383604282015281606282015295945050505050565b5f5f6105a184846030610612565b90507ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036414170010000000000000000000000000000000060208301510991507ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141604082015160801c830891505092915050565b6060604051905061ffe082603f01168101604052818152604051805f81526020810190505f8152602081019050855160208701825e8551810190508360f01b81526003810190506021810360018203865160208801845e865183019250865183536001830192508183036020838686038760025afa61068f575f5ffd5b8251600183536020808801838660025afa6106a8575f5ffd5b60025b60208911156106e9578060051b8801602081035183188652818553602081858860025afa6106d7575f5ffd5b506001810190506020890398506106ab565b505050505050509392505050565b5f5ffd5b5f5ffd5b5f819050919050565b610711816106ff565b811461071b575f5ffd5b50565b5f8135905061072c81610708565b92915050565b5f5f60408385031215610748576107476106f7565b5b5f6107558582860161071e565b92505060206107668582860161071e565b9150509250929050565b5f8115159050919050565b61078481610770565b82525050565b5f60208201905061079d5f83018461077b565b92915050565b5f819050919050565b6107b5816107a3565b81146107bf575f5ffd5b50565b5f813590506107d0816107ac565b92915050565b5f5f5f5f5f5f60c087890312156107f0576107ef6106f7565b5b5f6107fd89828a016107c2565b965050602061080e89828a0161071e565b955050604061081f89828a0161071e565b945050606061083089828a0161071e565b935050608061084189828a0161071e565b92505060a061085289828a0161071e565b9150509295509295509295565b610868816106ff565b82525050565b5f6040820190506108815f83018561085f565b61088e602083018461085f565b9392505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108be82610895565b9050919050565b6108ce816108b4565b82525050565b5f6020820190506108e75f8301846108c5565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f84011261090e5761090d6108ed565b5b8235905067ffffffffffffffff81111561092b5761092a6108f1565b5b602083019150836001820283011115610947576109466108f5565b5b9250929050565b5f5f5f5f5f5f5f60c0888a031215610969576109686106f7565b5b5f88013567ffffffffffffffff811115610986576109856106fb565b5b6109928a828b016108f9565b975097505060206109a58a828b0161071e565b95505060406109b68a828b0161071e565b94505060606109c78a828b0161071e565b93505060806109d88a828b0161071e565b92505060a06109e98a828b0161071e565b91505092959891949750929550565b5f81905092915050565b828183375f83830152505050565b5f610a1b83856109f8565b9350610a28838584610a02565b82840190509392505050565b5f610a40828486610a10565b91508190509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffdfea2646970667358221220f4e14d800d714abbb7bcb12a479c7646e0b2a646285b882b67e86c8f5450817764736f6c634300081d0033";

  
      type ZecFrostConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: ZecFrostConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class ZecFrost__factory extends ContractFactory {
    
      constructor(...args: ZecFrostConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(overrides || {});
    };
    override deploy(overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(overrides || {}) as Promise<ZecFrost & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): ZecFrost__factory {
      return super.connect(runner) as ZecFrost__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): ZecFrostInterface {
      return new Interface(_abi) as ZecFrostInterface;
    }
    
    override attach(address: string | Addressable): ZecFrost {
      return super.attach(address) as ZecFrost;
    }
  static connect(address: string, runner?: ContractRunner | null): ZecFrost {
      return new Contract(address, _abi, runner) as unknown as ZecFrost;
    }
  }

  
  