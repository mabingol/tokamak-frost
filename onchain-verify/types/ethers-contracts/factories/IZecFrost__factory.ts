/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

  import { Contract, Interface, type ContractRunner } from "ethers";
  import type { IZecFrost, IZecFrostInterface } from "../IZecFrost.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "message",
        "type": "bytes32"
      },
      {
        "internalType": "uint256",
        "name": "pkx",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "pky",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "rx",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "ry",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "z",
        "type": "uint256"
      }
    ],
    "name": "verify",
    "outputs": [
      {
        "internalType": "address",
        "name": "recovered",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
] as const;

  export class IZecFrost__factory {
    static readonly abi = _abi;
    static createInterface(): IZecFrostInterface {
      return new Interface(_abi) as IZecFrostInterface;
    }
    static connect(address: string, runner?: ContractRunner | null): IZecFrost {
      return new Contract(address, _abi, runner) as unknown as IZecFrost;
    }
  }
  